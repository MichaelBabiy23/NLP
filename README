# Tweet Generator Program

**Authored by**: Michael Babiy  
323073734

## Description

This program generates random tweets using a **Markov Chain** algorithm. It analyzes word sequences from a provided database, identifies patterns, and predicts word combinations to create tweets that flow naturally. By leveraging statistical analysis, the program simulates real tweet generation.

## Data Structures

- **MarkovChain**: A linked list where each node contains a **MarkovNode**.
- **MarkovNode**: A node that stores a word and its associated **MarkovNodeFrequency**.
- **MarkovNodeFrequency**: Stores words that follow the **MarkovNode** word along with their frequencies.

## Main Functions

- **generate_tweet**: Generates random tweets using the Markov chain.
- **get_node_from_database, add_to_database, add_node_to_frequency_list, add, get_first_random_node, get_next_random_node**: Functions to interact with and manage the data structures.
- **fill_database**: Extracts data from the input file and populates the data structures.
- **free_database**: Frees memory allocated for the database.

## Program Files

- `tweets_generator.c`: Contains the `main()` function and `fill_database()` function.
- `markov_chain.c`: Implements functions that use **MarkovNode**.
- `markov_chain.h`: Header file for `markov_chain.c`.
- `linked_list.c`: Implements functions for the linked list.
- `linked_list.h`: Header file for `linked_list.c`.
- **Makefile**: Script used to compile the program.

## How to Compile and Run

### 1. Compile

To compile the program, run the following command:

```bash
gcc -Wall -Wextra -Wvla -std=c99 tweets_generator.c markov_chain.c linked_list.c -o tweets_generator
```

### 2. Run

After compilation, run the program with:

```bash
./tweets_generator
```

## Input Parameters

The program accepts the following inputs:

- **Seed**: A starting word or phrase for the tweet generation.
- **Number of Tweets**: How many tweets to generate.
- **File Path**: Path to the input file (used for reading data).
- **Number of Words to Read** (Optional): The number of words to read from the input file for the Markov chain.

## Output

For each tweet generated, the program will output something like:

```
Tweet i: 
(i runs from 1 to the specified number of tweets)
```

Example output:

```
Tweet 1:  
"vibe this morning."
```